/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Actvidad3;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author johan
 */
public class AltaClientes extends javax.swing.JFrame {

    /**
     * Creates new form AltaClientes
     */
    
    // creamos un arrays para despues optener los clientes esto se hace en las dos class para lo mismo 
    private ArrayList<Cliente> clientes = new ArrayList<>();
    
    
    // este es el contruror que no resive ningun parametro y ejecuta los dos metodos creados 
    public AltaClientes() {
        initComponents();
        cargarProvincias(); 
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nombre = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        Telefono = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        ButtonAgregar = new javax.swing.JButton();
        ButtonVerTabla = new javax.swing.JButton();
        cmbProvincias = new javax.swing.JComboBox<>();
        txtProvincia = new javax.swing.JLabel();
        SpinnerFecha = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Nombre.setText("Nombre");

        Email.setText("Apellidos");

        Telefono.setText("Fecha Alta");

        ButtonAgregar.setText("Agregar");
        ButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarActionPerformed(evt);
            }
        });

        ButtonVerTabla.setText("Ver Tabla");
        ButtonVerTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVerTablaActionPerformed(evt);
            }
        });

        cmbProvincias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProvinciasActionPerformed(evt);
            }
        });

        txtProvincia.setText("Provincia");

        SpinnerFecha.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Email, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Telefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(cmbProvincias, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SpinnerFecha))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(ButtonAgregar)
                .addGap(62, 62, 62)
                .addComponent(ButtonVerTabla)
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Telefono)
                    .addComponent(SpinnerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProvincias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProvincia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAgregar)
                    .addComponent(ButtonVerTabla))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    //  este metodo es el que agrega la informacion que optenemos y las guarda en el arrays
    // y por ultimo limpiamos los compos para seguir agregando usuarios 
    private void ButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarActionPerformed
        // TODO add your handling code here:
        String nombre = txtNombre.getText();
        String email = txtEmail.getText();
        
        Date fechaSeleccionada = (Date) SpinnerFecha.getValue();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaTexto = sdf.format(fechaSeleccionada);
        
        String provincia = cmbProvincias.getSelectedItem().toString(); 
        
        if (!nombre.isEmpty() && !email.isEmpty()) {
            
            Cliente nuevoCliente = new Cliente(nombre,email,provincia,fechaSeleccionada);
            clientes.add(nuevoCliente);
            JOptionPane.showMessageDialog(this, "Cliente Agregado");
            limpiarCampos();
            
         }
        
    }//GEN-LAST:event_ButtonAgregarActionPerformed
    
    
    // este metodo hace que el boton que dice ver tabla nos lleve ah la class ListaCliente
    private void ButtonVerTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVerTablaActionPerformed
        // TODO add your handling code here:
        ListaCliente lista = new ListaCliente(clientes);
        lista.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_ButtonVerTablaActionPerformed

    private void cmbProvinciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProvinciasActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbProvinciasActionPerformed
    
    // este metodo optiene la info del enum y los carga en en JComboBx 
    private void cargarProvincias() {
    // Obtener todas las constantes del enum Provincia
    Provincia[] provincias = Provincia.values();
    for (Provincia provincia : provincias) {
        cmbProvincias.addItem(provincia.toString());
    }
    }
    
    
 
    //  este metodo limpia los campos para que el usuario siga agregando clientes depues
    // de a ver agregado ya ah uno
    private void limpiarCampos(){
    txtNombre.setText("");
    txtEmail.setText("");
    
}
    
    /**
     * @param args the command line arguments
     */
    
    // este es El método main es el punto de entrada de la aplicación Java.
    // Configura y muestra una instancia de la clase AltaClientes en el hilo de la interfaz de usuario.
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAgregar;
    private javax.swing.JButton ButtonVerTabla;
    private javax.swing.JLabel Email;
    private javax.swing.JLabel Nombre;
    private javax.swing.JSpinner SpinnerFecha;
    private javax.swing.JLabel Telefono;
    private javax.swing.JComboBox<String> cmbProvincias;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JLabel txtProvincia;
    // End of variables declaration//GEN-END:variables
}
